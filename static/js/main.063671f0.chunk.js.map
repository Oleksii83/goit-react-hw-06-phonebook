{"version":3,"sources":["Component/ContactList/ContactList.module.css","Component/Filter/Filter.module.css","redux/action.js","Component/ContactForm/ContactForm.js","Component/Filter/Filter.js","Component/ContactList/ContactList.js","App.js","reportWebVitals.js","redux/reducer.js","redux/store.js","index.js"],"names":["module","exports","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","changeFilter","connect","dispath","onSubmit","actions","useState","setName","setNumber","handleChange","e","currentTarget","value","reset","nameInputId","numberInputId","className","preventDefault","htmlFor","onChange","type","pattern","title","required","state","phonebook","filter","action","target","s","SearchContainer","ContName","placeholder","getFilterSearch","contacts","normalizedFilter","toLowerCase","contact","includes","dispatch","onDeleteContact","container","map","item","onClick","btn","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createReducer","_","combineReducers","store","configureStore","reducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.063671f0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactList_container__12Nj1\",\"item\":\"ContactList_item__3iqfv\",\"btn\":\"ContactList_btn__1WlrI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchContainer\":\"Filter_SearchContainer__12ZzS\",\"SearchName\":\"Filter_SearchName__3xFQb\",\"ContName\":\"Filter_ContName__2g_o6\",\"InputSearch\":\"Filter_InputSearch__2rF1z\"};","import shortid from 'shortid';\nimport { createAction } from '@reduxjs/toolkit';\n\nconst addContact = createAction('ADD_CONTACT', ({ name, number }) => {\n  return {\n    payload: {\n      id: shortid.generate(),\n      name,\n      number,\n    },\n  };\n});\n\nconst deleteContact = createAction('DELETE');\n\nconst changeFilter = createAction('CHANGE_FILTER');\n\nexport default { addContact, deleteContact, changeFilter };\n","import { useState } from 'react';\nimport shortid from 'shortid';\nimport './ContactForm.css';\nimport { connect } from 'react-redux';\nimport actions from '../../redux/action';\n\nfunction ContactForm({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    onSubmit({ name, number });\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const nameInputId = shortid.generate();\n  const numberInputId = shortid.generate();\n\n  return (\n    <form className=\"Input-container\" onSubmit={handleSubmit}>\n      <h3 className=\"Input-name\"> Name </h3>\n      <label htmlFor={nameInputId}>\n        <input\n          className=\"Input\"\n          value={name}\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          id={nameInputId}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label className=\"TelInputContainer\" htmlFor={numberInputId}>\n        <h3 className=\"Input-name\"> Number </h3>\n        <input\n          value={number}\n          onChange={handleChange}\n          type=\"tel\"\n          name=\"number\"\n          id={numberInputId}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <button type=\"submit\" className=\"input-btn\">\n        Add contact\n      </button>\n    </form>\n  );\n}\nconst mapDispatchToProps = dispath => ({\n  onSubmit: (name, number) => dispath(actions.addContact(name, number)),\n});\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","import { connect } from 'react-redux';\nimport action from '../../redux/action';\nimport React from 'react';\nimport s from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => (\n  <label className={s.SearchContainer}>\n    <p className={s.ContName}>Find contacts by name:</p>\n    <input\n      type=\"text\"\n      value={value}\n      onChange={onChange}\n      className=\"InputSearch\"\n      placeholder=\"Paul Richardson\"\n    />\n  </label>\n);\n\nconst mapStateToProps = state => ({\n  value: state.phonebook.filter,\n});\n\nconst mapDispatchToProps = dispath => ({\n  onChange: e => dispath(action.changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\nimport s from './ContactList.module.css';\nimport { connect } from 'react-redux';\nimport actions from '../../redux/action';\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <ul className={s.container}>\n    {contacts.map(({ name, number, id }) => (\n      <li key={id} className={s.item}>\n        {name}: {number}\n        <button type=\"button\" onClick={() => onDeleteContact(id)} className={s.btn}>\n          Delete\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nconst getFilterSearch = (contacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n  return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n};\n\nconst mapStateToProps = ({ phonebook: { contacts, filter } }) => ({\n  contacts: getFilterSearch(contacts, filter),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(actions.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import './App.css';\nimport { connect } from 'react-redux';\nimport { useState } from 'react';\nimport shortid from 'shortid';\nimport ContactForm from './Component/ContactForm/ContactForm';\nimport Filter from './Component/Filter/Filter';\nimport ContactList from './Component/ContactList/ContactList';\nimport useLocalStorage from './Component/LocalStorage/LocalStorage';\n\nexport default function App() {\n  // const [contacts, setContacts] = useLocalStorage('contacts', [\n  //   { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  //   { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  //   { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  //   { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  // ]);\n  // const [filter, setFilter] = useState('');\n\n  // const getFilterSearch = () => {\n  //   const normalizedFilter = filter.toLowerCase();\n  //   return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n  // };\n\n  // const onSearchChange = e => {\n  //   setFilter(e.currentTarget.value);\n  // };\n\n  // const onDeleteContact = id => {\n  //   setContacts(contacts.filter(contact => contact.id !== id));\n  // };\n\n  // const addContact = ({ name, number }) => {\n  //   const contact = {\n  //     id: shortid.generate(),\n  //     name,\n  //     number,\n  //   };\n  //   const equalName = contacts.find(item => item.name === contact.name);\n\n  //   if (equalName) return alert(`${contact.name} is already in contacts`);\n\n  //   setContacts(prevContacts => [...prevContacts, contact]);\n  // };\n\n  return (\n    <>\n      <div className=\"Input-form\">\n        <h1>Phonebook</h1>\n        <ContactForm />\n        <h2 className=\"SearchName\">Contact</h2>\n        <Filter />\n        {/* value={filter} onChange={onSearchChange} /> */}\n        <ContactList />\n        {/* contacts={getFilterSearch()} onDeleteContact={onDeleteContact} /> */}\n      </div>\n    </>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\n\nimport { createReducer } from '@reduxjs/toolkit';\nimport action from './action';\n\nconst contacts = createReducer(\n  [\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  ],\n  {\n    [action.addContact]: (state, { payload }) => [...state, payload],\n    [action.deleteContact]: (state, { payload }) => state.filter(({ id }) => id !== payload),\n  },\n);\n\nconst filter = createReducer('', {\n  [action.changeFilter]: (_, action) => action.payload,\n});\n\nexport default combineReducers({\n  contacts,\n  filter,\n});\n","import { combineReducers } from 'redux';\nimport { configureStore } from '@reduxjs/toolkit';\nimport reducer from './reducer';\n\n// const reducer = (state = {}, action) => {\n//   console.log('🚀 ~ file: store.js ~ line 5 ~ reducer ~ action', action);\n//   return state;\n// };\n\n// const rootReducer = combineReducers({\n//   phonebook: reducer,\n// });\n\n// const store = createStore(rootReducer, composeWithDevTools());\nconst store = configureStore({\n  reducer: {\n    phonebook: reducer,\n  },\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}