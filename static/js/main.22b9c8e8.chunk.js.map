{"version":3,"sources":["Component/ContactList/ContactList.module.css","Component/Filter/Filter.module.css","redux/action.js","Component/ContactForm/ContactForm.js","Component/Filter/Filter.js","Component/ContactList/ContactList.js","App.js","reportWebVitals.js","redux/reducer.js","redux/store.js","index.js"],"names":["module","exports","addContact","createAction","name","number","payload","id","shortid","generate","propTypes","PropTypes","string","isRequired","phonebookActions","deleteContact","changeFilter","connect","dispath","onSubmit","actions","useState","setName","setNumber","handleChange","e","currentTarget","value","nameInputId","numberInputId","className","preventDefault","htmlFor","onChange","type","pattern","title","required","autoComplete","state","phonebook","filter","action","target","s","SearchContainer","ContName","placeholder","getFilterSearch","contacts","normalizedFilter","toLowerCase","contact","includes","dispatch","onDeleteContact","container","map","item","onClick","btn","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createReducer","find","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","bookPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","devTools","process","allElementOfStore","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.22b9c8e8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactList_container__12Nj1\",\"item\":\"ContactList_item__3iqfv\",\"btn\":\"ContactList_btn__1WlrI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchContainer\":\"Filter_SearchContainer__12ZzS\",\"SearchName\":\"Filter_SearchName__3xFQb\",\"ContName\":\"Filter_ContName__2g_o6\",\"InputSearch\":\"Filter_InputSearch__2rF1z\"};","import shortid from 'shortid';\nimport PropTypes from 'prop-types';\nimport { createAction } from '@reduxjs/toolkit';\n\nconst addContact = createAction('ADD_CONTACT', ({ name, number }) => {\n  return {\n    payload: {\n      id: shortid.generate(),\n      name,\n      number,\n    },\n  };\n});\n\naddContact.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nconst deleteContact = createAction('DELETE');\n\nconst changeFilter = createAction('CHANGE_FILTER');\n\nconst phonebookActions = { addContact, deleteContact, changeFilter };\n\nexport default phonebookActions;\n","import { useState } from 'react';\nimport shortid from 'shortid';\nimport './ContactForm.css';\nimport { connect } from 'react-redux';\nimport actions from '../../redux/action';\n\nfunction ContactForm({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  // console.log(localStorage);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    onSubmit({ name, number });\n    reset();\n  };\n\n  const nameInputId = shortid.generate();\n  const numberInputId = shortid.generate();\n\n  return (\n    <form className=\"Input-container\" onSubmit={handleSubmit}>\n      <h3 className=\"Input-name\"> Name </h3>\n      <label htmlFor={nameInputId}>\n        <input\n          className=\"Input\"\n          value={name}\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          id={nameInputId}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          autoComplete=\"off\"\n        />\n      </label>\n      <label className=\"TelInputContainer\" htmlFor={numberInputId}>\n        <h3 className=\"Input-name\"> Number </h3>\n        <input\n          value={number}\n          onChange={handleChange}\n          type=\"tel\"\n          name=\"number\"\n          id={numberInputId}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <button type=\"submit\" className=\"input-btn\">\n        Add contact\n      </button>\n    </form>\n  );\n}\nconst mapDispatchToProps = dispath => ({\n  onSubmit: (name, number) => dispath(actions.addContact(name, number)),\n});\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","import { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport action from '../../redux/action';\nimport React from 'react';\nimport s from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => (\n  <label className={s.SearchContainer}>\n    <p className={s.ContName}>Find contacts by name:</p>\n    <input\n      type=\"text\"\n      value={value}\n      onChange={onChange}\n      className=\"InputSearch\"\n      placeholder=\"Paul Richardson\"\n    />\n  </label>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  value: state.phonebook.filter,\n});\n\nconst mapDispatchToProps = dispath => ({\n  onChange: e => dispath(action.changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\nimport { connect } from 'react-redux';\nimport actions from '../../redux/action';\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <ul className={s.container}>\n    {contacts.map(({ name, number, id }) => (\n      <li key={id} className={s.item}>\n        {name}: {number}\n        <button type=\"button\" onClick={() => onDeleteContact(id)} className={s.btn}>\n          Delete\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.array,\n};\n\nconst getFilterSearch = (contacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n  return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n};\n\nconst mapStateToProps = ({ phonebook: { contacts, filter } }) => ({\n  contacts: getFilterSearch(contacts, filter),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(actions.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import './App.css';\nimport ContactForm from './Component/ContactForm/ContactForm';\nimport Filter from './Component/Filter/Filter';\nimport ContactList from './Component/ContactList/ContactList';\n\nexport default function App() {\n  return (\n    <>\n      <div className=\"Input-form\">\n        <h1>Phonebook</h1>\n        <ContactForm />\n        <h2 className=\"SearchName\">Contact</h2>\n        <Filter />\n        <ContactList />\n      </div>\n    </>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\n\nimport { createReducer } from '@reduxjs/toolkit';\nimport action from './action';\n\nconst contacts = createReducer(\n  [\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  ],\n  {\n    [action.addContact]: (state, { payload }) =>\n      state.find(contact => contact.name.includes(payload.name)) ? state : [...state, payload],\n    [action.deleteContact]: (state, { payload }) => state.filter(({ id }) => id !== payload),\n  },\n);\n\nconst filter = createReducer('', {\n  [action.changeFilter]: (_, action) => action.payload,\n});\n\nexport default combineReducers({\n  contacts,\n  filter,\n});\n","import {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport reducer from './reducer';\n\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst bookPersistConfig = {\n  key: 'phoneName',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst store = configureStore({\n  reducer: {\n    phonebook: persistReducer(bookPersistConfig, reducer),\n  },\n\n  middleware,\n\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nconst allElementOfStore = { store, persistor };\n\nexport default allElementOfStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n"],"sourceRoot":""}